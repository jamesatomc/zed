name: 'Build Windows Executable'
description: 'Builds the Zed executable for Windows'
runs:
  using: 'composite'
  steps:
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: x86_64-pc-windows-msvc
        components: clippy, rustfmt

    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "15.0"

    - name: Find Spectre mitigation path
      shell: pwsh
      run: |
        $paths = @(
          "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\*\lib\spectre",
          "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC\*\lib\spectre"
        )
        
        $spectrePath = $null
        foreach ($pattern in $paths) {
          $found = Get-ChildItem -Path $pattern -ErrorAction SilentlyContinue | Select-Object -First 1
          if ($found) {
            $spectrePath = $found.FullName
            break
          }
        }
        
        if ($spectrePath) {
          Write-Host "Found Spectre mitigation libraries at: $spectrePath"
        } else {
          Write-Host "Could not find Spectre mitigation libraries, using default path"
          $spectrePath = "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.36.32532\lib\spectre"
        }
        
        "SPECTRE_MITIGATION_PATH=$spectrePath" | Out-File -FilePath $env:GITHUB_ENV -Append
        "SPECTRE_LLVM_LIB=$spectrePath\x64" | Out-File -FilePath $env:GITHUB_ENV -Append
        "VCPKG_FEATURE_FLAGS=-binarycaching" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Set up shorter paths for Cargo
      shell: powershell
      run: |
        # Create shorter path for cargo cache
        New-Item -ItemType Directory -Force -Path "C:\cr"
        $env:CARGO_HOME = "C:\cr"
        echo "CARGO_HOME=C:\cr" | Out-File -FilePath $env:GITHUB_ENV -Append
        
        # Create shorter path for build target
        New-Item -ItemType Directory -Force -Path "C:\zb"
        echo "CARGO_TARGET_DIR=C:\zb" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          C:\cr
          C:\zb
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build Zed executable
      shell: powershell
      run: |
        $env:RUSTFLAGS = "-C target-feature=+crt-static"
        
        # Explicitly set lib paths
        $fullSpectreLibPath = $env:SPECTRE_LLVM_LIB
        echo "Using Spectre lib path: $fullSpectreLibPath"
        
        # Skip pet-related dependencies with path length issues
        cargo build --release --bin zed --no-default-features
        if (-not $?) { throw "Build failed" }
        
    - name: Verify build output
      shell: powershell
      run: |
        # Look in the correct output directory
        if (-not (Test-Path "C:\zb\release\zed.exe")) {
          throw "Build output not found"
        }
        
    - name: Package executable
      shell: powershell
      run: |
        New-Item -ItemType Directory -Force -Path "dist"
        # Copy from the correct build location
        Copy-Item "C:\zb\release\zed.exe" -Destination "dist/"
        
        # Copy assets folder if needed
        if (Test-Path "assets") {
          Copy-Item -Path "assets" -Destination "dist/" -Recurse
        }
        
        # Copy any required DLLs or configurations
        if (Test-Path "crates/zed/config") {
          Copy-Item -Path "crates/zed/config" -Destination "dist/" -Recurse
        }
        
        # Create a zip archive of the distribution
        Compress-Archive -Path "dist/*" -DestinationPath "zed-windows.zip" -Force
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: zed-windows
        path: zed-windows.zip
        retention-days: 7
